// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TurismoBackend.DataContext;

#nullable disable

namespace TurismoBackend.Migrations
{
    [DbContext(typeof(TurismoContext))]
    partial class TurismoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TurismoServices.Models.Actividad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Costo")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<int>("Duracion")
                        .HasColumnType("int");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("IdDestino")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("URL_Image")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("IdDestino");

                    b.ToTable("Actividades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Costo = 75.00m,
                            Descripcion = "Descripción actividad ejemplo 1",
                            Duracion = 180,
                            Eliminado = false,
                            IdDestino = 1,
                            Nombre = "EjemploActividad1",
                            URL_Image = "https://ejemplo.com/actividad1.jpg"
                        },
                        new
                        {
                            Id = 2,
                            Costo = 50.00m,
                            Descripcion = "Descripción actividad ejemplo 2",
                            Duracion = 120,
                            Eliminado = false,
                            IdDestino = 2,
                            Nombre = "EjemploActividad2",
                            URL_Image = "https://ejemplo.com/actividad2.jpg"
                        });
                });

            modelBuilder.Entity("TurismoServices.Models.Administrador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Administradores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellido = "Uno",
                            Eliminado = false,
                            Email = "ejemplo@admin.com",
                            FechaRegistro = new DateTime(2025, 7, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "EjemploAdministrador",
                            Telefono = "0000000000"
                        });
                });

            modelBuilder.Entity("TurismoServices.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaNac")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellido = "EjemploApellido1",
                            Ciudad = "EjemploCiudad1",
                            Direccion = "EjemploDireccion1",
                            Documento = "00000001",
                            Eliminado = false,
                            Email = "ejemplo1@cliente.com",
                            FechaNac = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "EjemploCliente1",
                            Pais = "EjemploPais1",
                            Provincia = "EjemploProvincia1",
                            Telefono = "0000000001"
                        },
                        new
                        {
                            Id = 2,
                            Apellido = "EjemploApellido2",
                            Ciudad = "EjemploCiudad2",
                            Direccion = "EjemploDireccion2",
                            Documento = "00000002",
                            Eliminado = false,
                            Email = "ejemplo2@cliente.com",
                            FechaNac = new DateTime(1995, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "EjemploCliente2",
                            Pais = "EjemploPais2",
                            Provincia = "EjemploProvincia2",
                            Telefono = "0000000002"
                        });
                });

            modelBuilder.Entity("TurismoServices.Models.Destino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("URL_image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Destinos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Categoria = "Ejemplo",
                            Descripcion = "Descripción ejemplo destino 1",
                            Eliminado = false,
                            Nombre = "EjemploDestino1",
                            Pais = "EjemploPais",
                            URL_image = "https://ejemplo.com/destino1.jpg"
                        },
                        new
                        {
                            Id = 2,
                            Categoria = "Ejemplo",
                            Descripcion = "Descripción ejemplo destino 2",
                            Eliminado = false,
                            Nombre = "EjemploDestino2",
                            Pais = "EjemploPais",
                            URL_image = "https://ejemplo.com/destino2.jpg"
                        });
                });

            modelBuilder.Entity("TurismoServices.Models.DetalleVenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("IdActividad")
                        .HasColumnType("int");

                    b.Property<int?>("IdDestino")
                        .HasColumnType("int");

                    b.Property<int?>("IdItinerario")
                        .HasColumnType("int");

                    b.Property<int>("VentaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdActividad");

                    b.HasIndex("IdDestino");

                    b.HasIndex("IdItinerario");

                    b.HasIndex("VentaId");

                    b.ToTable("DetallesVentas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdActividad = 1,
                            IdDestino = 1,
                            IdItinerario = 1,
                            VentaId = 1
                        },
                        new
                        {
                            Id = 2,
                            IdActividad = 2,
                            IdDestino = 2,
                            IdItinerario = 2,
                            VentaId = 2
                        });
                });

            modelBuilder.Entity("TurismoServices.Models.Itinerario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("IdDestino")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("IdDestino");

                    b.ToTable("Itinerarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Ejemplo de itinerario 1",
                            Eliminado = false,
                            FechaFin = new DateTime(2025, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicio = new DateTime(2025, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDestino = 1,
                            Nombre = "EjemploItinerario1"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Ejemplo de itinerario 2",
                            Eliminado = false,
                            FechaFin = new DateTime(2025, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicio = new DateTime(2025, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDestino = 2,
                            Nombre = "EjemploItinerario2"
                        });
                });

            modelBuilder.Entity("TurismoServices.Models.Venta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaReservacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("MetodoPago")
                        .HasColumnType("int");

                    b.Property<int>("NumPersona")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Transporte")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Ventas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClienteId = 1,
                            Eliminado = false,
                            FechaPago = new DateTime(2025, 7, 30, 11, 39, 8, 792, DateTimeKind.Local).AddTicks(1398),
                            FechaReservacion = new DateTime(2025, 7, 30, 11, 39, 8, 792, DateTimeKind.Local).AddTicks(1382),
                            MetodoPago = 0,
                            NumPersona = 2,
                            Total = 1500m,
                            Transporte = 0
                        },
                        new
                        {
                            Id = 2,
                            ClienteId = 2,
                            Eliminado = false,
                            FechaPago = new DateTime(2025, 7, 30, 11, 39, 8, 792, DateTimeKind.Local).AddTicks(1403),
                            FechaReservacion = new DateTime(2025, 7, 30, 11, 39, 8, 792, DateTimeKind.Local).AddTicks(1402),
                            MetodoPago = 0,
                            NumPersona = 2,
                            Total = 1500m,
                            Transporte = 0
                        });
                });

            modelBuilder.Entity("TurismoServices.Models.Actividad", b =>
                {
                    b.HasOne("TurismoServices.Models.Destino", "Destino")
                        .WithMany("Actividad")
                        .HasForeignKey("IdDestino")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Destino");
                });

            modelBuilder.Entity("TurismoServices.Models.DetalleVenta", b =>
                {
                    b.HasOne("TurismoServices.Models.Actividad", "Actividad")
                        .WithMany()
                        .HasForeignKey("IdActividad");

                    b.HasOne("TurismoServices.Models.Destino", "Destino")
                        .WithMany()
                        .HasForeignKey("IdDestino");

                    b.HasOne("TurismoServices.Models.Itinerario", "Itinerario")
                        .WithMany()
                        .HasForeignKey("IdItinerario");

                    b.HasOne("TurismoServices.Models.Venta", "Venta")
                        .WithMany("DetallesVenta")
                        .HasForeignKey("VentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actividad");

                    b.Navigation("Destino");

                    b.Navigation("Itinerario");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("TurismoServices.Models.Itinerario", b =>
                {
                    b.HasOne("TurismoServices.Models.Destino", "Destino")
                        .WithMany("Itinerario")
                        .HasForeignKey("IdDestino")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Destino");
                });

            modelBuilder.Entity("TurismoServices.Models.Venta", b =>
                {
                    b.HasOne("TurismoServices.Models.Cliente", "Cliente")
                        .WithMany("Ventas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("TurismoServices.Models.Cliente", b =>
                {
                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("TurismoServices.Models.Destino", b =>
                {
                    b.Navigation("Actividad");

                    b.Navigation("Itinerario");
                });

            modelBuilder.Entity("TurismoServices.Models.Venta", b =>
                {
                    b.Navigation("DetallesVenta");
                });
#pragma warning restore 612, 618
        }
    }
}
