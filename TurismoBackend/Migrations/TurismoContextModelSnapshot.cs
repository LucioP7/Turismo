// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TurismoBackend.DataContext;

#nullable disable

namespace TurismoBackend.Migrations
{
    [DbContext(typeof(TurismoContext))]
    partial class TurismoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TurismoServices.Models.Actividad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Costo")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<int>("Duracion")
                        .HasColumnType("int");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("IdDestino")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("URL_Image")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("IdDestino");

                    b.ToTable("Actividades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Costo = 75.00m,
                            Descripcion = "Exploración a pie por los senderos de las Cataratas del Iguazú.",
                            Duracion = 180,
                            Eliminado = false,
                            IdDestino = 1,
                            Nombre = "Caminata por las Cataratas del Iguazú",
                            URL_Image = "https://media.tacdn.com/media/attractions-splice-spp-360x240/0a/dd/10/25.jpg"
                        },
                        new
                        {
                            Id = 2,
                            Costo = 50.00m,
                            Descripcion = "Visita a la Casa Rosada de Buenos Aires.",
                            Duracion = 120,
                            Eliminado = false,
                            IdDestino = 2,
                            Nombre = "Visita a la Casa Rosada",
                            URL_Image = "https://media.tacdn.com/media/attractions-splice-spp-674x446/06/70/5f/c2.jpg"
                        });
                });

            modelBuilder.Entity("TurismoServices.Models.Administrador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Administradores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellido = "Pianetti",
                            Eliminado = false,
                            Email = "lp@lp.com",
                            FechaRegistro = new DateTime(2025, 7, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Lucio",
                            Telefono = "44064814"
                        });
                });

            modelBuilder.Entity("TurismoServices.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ActividadId")
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ConfirmacionPago")
                        .HasColumnType("int");

                    b.Property<int?>("DestinoId")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("EstadoReservacion")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaNac")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaReservacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("IdActividad")
                        .HasColumnType("int");

                    b.Property<int?>("IdDestino")
                        .HasColumnType("int");

                    b.Property<int?>("IdItinerario")
                        .HasColumnType("int");

                    b.Property<int?>("ItinerarioId")
                        .HasColumnType("int");

                    b.Property<int>("MetodoPago")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("NumPersona")
                        .HasColumnType("int");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Transporte")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActividadId");

                    b.HasIndex("DestinoId");

                    b.HasIndex("ItinerarioId");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellido = "Pianetti",
                            Ciudad = "San Justo",
                            ConfirmacionPago = 1,
                            Direccion = "San Roque 2440",
                            Documento = "44064814",
                            Eliminado = false,
                            Email = "lp7@lp7.com",
                            EstadoReservacion = 0,
                            FechaNac = new DateTime(2002, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaPago = new DateTime(2025, 7, 27, 17, 2, 2, 498, DateTimeKind.Local).AddTicks(1735),
                            FechaReservacion = new DateTime(2025, 7, 27, 17, 2, 2, 498, DateTimeKind.Local).AddTicks(1718),
                            IdActividad = 1,
                            IdDestino = 1,
                            IdItinerario = 1,
                            MetodoPago = 0,
                            Nombre = "Lucio",
                            NumPersona = 1,
                            Pais = "Argentina",
                            Provincia = "Santa Fe",
                            Telefono = "3498518884",
                            Total = 150000.00m,
                            Transporte = 0
                        },
                        new
                        {
                            Id = 2,
                            Apellido = "Perez",
                            Ciudad = "Ciudad Falsa",
                            ConfirmacionPago = 0,
                            Direccion = "Calle Falsa 123",
                            Documento = "12345678",
                            Eliminado = false,
                            Email = "ej@ej.com",
                            EstadoReservacion = 1,
                            FechaNac = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaPago = new DateTime(2025, 7, 27, 17, 2, 2, 498, DateTimeKind.Local).AddTicks(1741),
                            FechaReservacion = new DateTime(2025, 7, 27, 17, 2, 2, 498, DateTimeKind.Local).AddTicks(1740),
                            IdActividad = 2,
                            IdDestino = 2,
                            IdItinerario = 2,
                            MetodoPago = 1,
                            Nombre = "Juan",
                            NumPersona = 2,
                            Pais = "Argentina",
                            Provincia = "Provincia Falsa",
                            Telefono = "1234567890",
                            Total = 200000.00m,
                            Transporte = 0
                        });
                });

            modelBuilder.Entity("TurismoServices.Models.Destino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("URL_image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Destinos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Categoria = "Natural",
                            Descripcion = "Maravilla natural en la provincia de Misiones.",
                            Eliminado = false,
                            Nombre = "Cataratas del Iguazú",
                            Pais = "Argentina",
                            URL_image = "https://www.iguazujungle.com/esp/web2/images/Web%20192016.jpg"
                        },
                        new
                        {
                            Id = 2,
                            Categoria = "Cultural",
                            Descripcion = "Capital cosmopolita de Argentina con rica vida cultural.",
                            Eliminado = false,
                            Nombre = "Buenos Aires",
                            Pais = "Argentina",
                            URL_image = "https://s3.amazonaws.com/arc-wordpress-client-uploads/infobae-wp/wp-content/uploads/2019/07/03201757/Ciudades-mas-caras-de-America-Latina-Buenos-Aires.jpg"
                        });
                });

            modelBuilder.Entity("TurismoServices.Models.Itinerario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("IdDestino")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("IdDestino");

                    b.ToTable("Itinerarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Viaje a las Cataratas del Iguazú con actividades de aventura.",
                            Eliminado = false,
                            FechaFin = new DateTime(2025, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicio = new DateTime(2025, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDestino = 1,
                            Nombre = "Aventura en las Cataratas"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Viaje a Buenos Aires con actividades culturales.",
                            Eliminado = false,
                            FechaFin = new DateTime(2025, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicio = new DateTime(2025, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDestino = 2,
                            Nombre = "Cultura en Buenos Aires"
                        });
                });

            modelBuilder.Entity("TurismoServices.Models.Actividad", b =>
                {
                    b.HasOne("TurismoServices.Models.Destino", "Destino")
                        .WithMany("Actividad")
                        .HasForeignKey("IdDestino")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Destino");
                });

            modelBuilder.Entity("TurismoServices.Models.Cliente", b =>
                {
                    b.HasOne("TurismoServices.Models.Actividad", "Actividad")
                        .WithMany()
                        .HasForeignKey("ActividadId");

                    b.HasOne("TurismoServices.Models.Destino", "Destino")
                        .WithMany()
                        .HasForeignKey("DestinoId");

                    b.HasOne("TurismoServices.Models.Itinerario", "Itinerario")
                        .WithMany()
                        .HasForeignKey("ItinerarioId");

                    b.Navigation("Actividad");

                    b.Navigation("Destino");

                    b.Navigation("Itinerario");
                });

            modelBuilder.Entity("TurismoServices.Models.Itinerario", b =>
                {
                    b.HasOne("TurismoServices.Models.Destino", "Destino")
                        .WithMany("Itinenario")
                        .HasForeignKey("IdDestino")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Destino");
                });

            modelBuilder.Entity("TurismoServices.Models.Destino", b =>
                {
                    b.Navigation("Actividad");

                    b.Navigation("Itinenario");
                });
#pragma warning restore 612, 618
        }
    }
}
